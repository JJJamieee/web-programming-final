{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\my_data\\\\109-1_Web Programming\\\\web-programming-final\\\\own\\\\src\\\\Editschedule.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport EditGame from './EditGame';\nimport SortSchedule from './SortSchedule';\nimport Typography from '@material-ui/core/Typography';\nconst API_ROOT = 'http://localhost:4000/api';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  next_button: {\n    float: 'right'\n  }\n});\n\nfunction createData(date, time, match, place) {\n  return {\n    date,\n    time,\n    match,\n    place\n  };\n}\n\nconst rows = [createData('3/4', '12:40', '電機對土木', '新生'), createData('3/4', '18:00', '機械對生機', '中央'), createData('3/4', '19:00', '資工對日文', '中央')];\nexport default function Schedule(props) {\n  _s();\n\n  const [game, setGame] = useState({});\n  const [changePage, setChagePage] = useState(false);\n  const [cupSchedule, setCupSchedule] = useState([]);\n  const [curPage, setCurPage] = useState(0);\n  const [pageNum, setPageNum] = useState(0);\n  const [sortDateList, setSortDateList] = useState([]);\n  const classes = useStyles();\n\n  const handleEdit = gameInstance => {\n    setChagePage(true);\n    setGame(gameInstance);\n  };\n\n  const getSchedule = async id => {\n    // TODO : get current cup schedule\n    const {\n      data: schedule\n    } = await instance.get('/getSchedule', {\n      params: {\n        id\n      }\n    });\n    setCupSchedule(schedule.contents);\n    setSortDateList([]);\n  };\n\n  const backToSchedule = () => {\n    setChagePage(false);\n    setCupSchedule([]);\n  };\n\n  useEffect(() => {\n    if (!cupSchedule.length) getSchedule(props.cupNum);\n\n    if (!sortDateList.length) {\n      const dayList = [];\n      cupSchedule.map(row => dayList.push(row.date.slice(0, 10)));\n      const daySet = new Set(dayList);\n      const uniDateList = Array.from(daySet);\n      setPageNum(uniDateList.length);\n      setSortDateList(SortSchedule(uniDateList));\n    }\n  });\n\n  const handlePreviost = () => {\n    if (curPage > 0) setCurPage(curPage => curPage - 1);\n  };\n\n  const handleNext = () => {\n    if (curPage < pageNum - 1) setCurPage(curPage => curPage + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !changePage ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u8CFD\\u7A0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        className: classes.title,\n        style: {\n          textAlign: \"center\"\n        },\n        children: sortDateList[curPage]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handlePreviost,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.next_button,\n        color: \"primary\",\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\u6BD4\\u8CFD\\u65E5\\u671F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"\\u6BD4\\u8CFD\\u6642\\u9593\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"\\u5C0D\\u6230\\u7D44\\u5408\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"\\u5730\\u9EDE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"\\u7DE8\\u8F2F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: cupSchedule.map((row, index) => row.date.slice(0, 10) === sortDateList[curPage] ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.date.slice(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.match\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.place\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: () => handleEdit(row),\n                  children: \"\\u7DE8\\u8F2F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(EditGame, {\n      game: game,\n      cupNum: props.cupNum,\n      backToSchedule: backToSchedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Schedule, \"2K09yu1Aok7kpgpXuSij2NsfP3I=\", false, function () {\n  return [useStyles];\n});\n\n_c = Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["C:/my_data/109-1_Web Programming/web-programming-final/own/src/Editschedule.js"],"names":["React","useState","useEffect","axios","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","EditGame","SortSchedule","Typography","API_ROOT","instance","create","baseURL","useStyles","table","minWidth","next_button","float","createData","date","time","match","place","rows","Schedule","props","game","setGame","changePage","setChagePage","cupSchedule","setCupSchedule","curPage","setCurPage","pageNum","setPageNum","sortDateList","setSortDateList","classes","handleEdit","gameInstance","getSchedule","id","data","schedule","get","params","contents","backToSchedule","length","cupNum","dayList","map","row","push","slice","daySet","Set","uniDateList","Array","from","handlePreviost","handleNext","title","textAlign","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditGame from './EditGame'\r\nimport SortSchedule from './SortSchedule'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst API_ROOT = 'http://localhost:4000/api'\r\nconst instance = axios.create({\r\n    baseURL: API_ROOT\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    next_button: {\r\n        float: 'right',\r\n    },\r\n});\r\n\r\nfunction createData(date, time, match, place) {\r\n    return { date, time, match, place };\r\n}\r\n\r\nconst rows = [\r\n    createData('3/4', '12:40', '電機對土木', '新生'),\r\n    createData('3/4', '18:00', '機械對生機', '中央'),\r\n    createData('3/4', '19:00', '資工對日文', '中央'),\r\n];\r\n\r\nexport default function Schedule(props) {\r\n    const [game, setGame] = useState({})\r\n    const [changePage, setChagePage] = useState(false)\r\n    const [cupSchedule, setCupSchedule] = useState([])\r\n    const [curPage, setCurPage] = useState(0);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [sortDateList, setSortDateList] = useState([])\r\n    const classes = useStyles();\r\n\r\n    const handleEdit = (gameInstance) => {\r\n        setChagePage(true)\r\n        setGame(gameInstance)\r\n    }\r\n\r\n    const getSchedule = async (id) => {\r\n        // TODO : get current cup schedule\r\n        const { data: schedule } = await instance.get('/getSchedule', { params: { id } })\r\n\r\n        setCupSchedule(schedule.contents)\r\n        setSortDateList([])\r\n    }\r\n\r\n    const backToSchedule = () => {\r\n        setChagePage(false)\r\n        setCupSchedule([])\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!cupSchedule.length)\r\n            getSchedule(props.cupNum)\r\n        if (!sortDateList.length) {\r\n            const dayList = []\r\n            cupSchedule.map((row) => (\r\n                dayList.push(row.date.slice(0, 10))\r\n            ))\r\n            const daySet = new Set(dayList);\r\n            const uniDateList = Array.from(daySet)\r\n            setPageNum(uniDateList.length)\r\n            setSortDateList(SortSchedule(uniDateList))\r\n        }\r\n    })\r\n\r\n    const handlePreviost = () => {\r\n        if (curPage > 0)\r\n            setCurPage((curPage) => curPage - 1)\r\n    }\r\n\r\n    const handleNext = () => {\r\n        if (curPage < pageNum - 1)\r\n            setCurPage((curPage) => curPage + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!changePage ?\r\n                <React.Fragment>\r\n                    <h2>賽程</h2>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} style={{ textAlign: \"center\" }}>\r\n                        {sortDateList[curPage]}\r\n                    </Typography>\r\n                    <Button color=\"primary\" onClick={handlePreviost}>Previous</Button>\r\n                    <Button className={classes.next_button} color=\"primary\" onClick={handleNext}>Next</Button>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>比賽日期</TableCell>\r\n                                    <TableCell align=\"right\">比賽時間</TableCell>\r\n                                    <TableCell align=\"right\">對戰組合</TableCell>\r\n                                    <TableCell align=\"right\">地點</TableCell>\r\n                                    <TableCell align=\"right\">編輯</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {cupSchedule.map((row, index) => (\r\n                                    row.date.slice(0, 10) === sortDateList[curPage] ?\r\n                                        <TableRow key={index}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.date.slice(0, 10)}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.time}</TableCell>\r\n                                            <TableCell align=\"right\">{row.match}</TableCell>\r\n                                            <TableCell align=\"right\">{row.place}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <Button type=\"button\" onClick={() => handleEdit(row)}>編輯</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        :\r\n                                        <React.Fragment></React.Fragment>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </React.Fragment>\r\n                :\r\n                <EditGame game={game} cupNum={props.cupNum} backToSchedule={backToSchedule} />}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}